server {         
    listen 80;
    #имя сервера, к которому мы обращаемся.
    server_name nginx; 
        
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Root content   
    location / {
        # root folder where Nginx will look for files to execute
        root /usr/share/nginx/html; 
        index index.html index.php;

        # Dynamic content
        location ~ \.php$ {
            try_files /does_not_exists @fallback;
        }

        # Static content
        location ~* ^.+\.(jpg|jpeg|gif|png|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|mp3|bmp|flv|rtf|js|swf|iso|html)$ {
            # $uri - current request URI in normalized form
            try_files $uri $uri/ @fallback;
        }

        # Another
        location / {
            try_files /does_not_exists @fallback;
        }
        
    }

    # deny access to .ht files
    location ~ /\.ht {
        deny all;
    }

    # redirect server error pages to the static page /50x.html or /404.html
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    error_page 404 /404.html;
    location = /40x.html {
        root /usr/share/nginx/html;
    }


    location @fallback {
        proxy_pass http://php-apache;
        proxy_redirect http://php-apache /;
        # $host - в порядке приоритета: имя хоста из строки запроса, или имя хоста из поля “Host” заголовка запроса, или имя сервера, соответствующего запросу 
        proxy_set_header Host $host;
        # Заголовок X-Forwarded-For (XFF) является стандартным заголовком де-факто
        # для определения исходного IP-адреса клиента, подключающегося к веб-серверу через HTTP-прокси 
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # $scheme - request scheme, “http” or “https”
        proxy_set_header X-Forwarded-Proto $scheme;
        access_log off;
    }
} 